// <auto-generated />
using System;
using Backend_REST_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend_REST_API.Migrations
{
    [DbContext(typeof(RestApiDbContext))]
    [Migration("20250304132457_firstMigration")]
    partial class firstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend_REST_API.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationId"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EducationId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Backend_REST_API.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Backend_REST_API.Models.PersonEducation", b =>
                {
                    b.Property<int>("PersonEducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonEducationId"));

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PersonEducationId");

                    b.HasIndex("EducationId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonEducations");
                });

            modelBuilder.Entity("Backend_REST_API.Models.PersonWorkExperience", b =>
                {
                    b.Property<int>("PersonWorkExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonWorkExperienceId"));

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.HasKey("PersonWorkExperienceId");

                    b.HasIndex("PersonId");

                    b.HasIndex("WorkId");

                    b.ToTable("PersonWorkExperiences");
                });

            modelBuilder.Entity("Backend_REST_API.Models.WorkExperience", b =>
                {
                    b.Property<int>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkId"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("WorkId");

                    b.ToTable("WorkExperiences");
                });

            modelBuilder.Entity("Backend_REST_API.Models.PersonEducation", b =>
                {
                    b.HasOne("Backend_REST_API.Models.Education", "Education")
                        .WithMany("PersonEducations")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_REST_API.Models.Person", "Person")
                        .WithMany("PersonEducations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Backend_REST_API.Models.PersonWorkExperience", b =>
                {
                    b.HasOne("Backend_REST_API.Models.Person", "Person")
                        .WithMany("PersonWorkExperiences")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend_REST_API.Models.WorkExperience", "WorkExperience")
                        .WithMany("PersonWorkExperiences")
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("WorkExperience");
                });

            modelBuilder.Entity("Backend_REST_API.Models.Education", b =>
                {
                    b.Navigation("PersonEducations");
                });

            modelBuilder.Entity("Backend_REST_API.Models.Person", b =>
                {
                    b.Navigation("PersonEducations");

                    b.Navigation("PersonWorkExperiences");
                });

            modelBuilder.Entity("Backend_REST_API.Models.WorkExperience", b =>
                {
                    b.Navigation("PersonWorkExperiences");
                });
#pragma warning restore 612, 618
        }
    }
}
